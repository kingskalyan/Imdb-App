// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace RestApi.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ActorResourceFeature : object, Xunit.IClassFixture<ActorResourceFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Actor.feature"
#line hidden
        
        public ActorResourceFeature(ActorResourceFeature.FixtureData fixtureData, RestApi_Tests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Actor Resource", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Get Actor All")]
        [Xunit.TraitAttribute("FeatureTitle", "Actor Resource")]
        [Xunit.TraitAttribute("Description", "Get Actor All")]
        [Xunit.TraitAttribute("Category", "GetActor")]
        public void GetActorAll()
        {
            string[] tagsOfScenario = new string[] {
                    "GetActor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Actor All", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
 testRunner.Given("I am a client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.When("I make Get Request \'api/Actors/\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 7
 testRunner.Then("response code must be \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 8
 testRunner.And(@"response data must look like '[{""id"":1,""name"":""Robert Brown Junior"",""bio"":""Robert Brown Junior is a renowned American actor known for his iconic portrayal of Tony Stark, also known as Iron Man, in the Marvel Cinematic Universe."",""dateOfBirth"":""1965-04-04T00:00:00"",""gender"":""Male""},{""id"":2,""name"":""Will Smith"",""bio"":""Steve Rogers, a scrawny but patriotic young man who is given super-soldier serum and becomes Captain America"",""dateOfBirth"":""1976-06-13T00:00:00"",""gender"":""Male""},{""id"":3,""name"":""Chris Hemsworth"",""bio"":""Thor, the Asgardian god of thunder"",""dateOfBirth"":""1983-08-13T00:00:00"",""gender"":""Male""}]'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Get By Id of Actor")]
        [Xunit.TraitAttribute("FeatureTitle", "Actor Resource")]
        [Xunit.TraitAttribute("Description", "Get By Id of Actor")]
        [Xunit.TraitAttribute("Category", "GetByActorId")]
        [Xunit.InlineDataAttribute("1", "200", new string[0])]
        [Xunit.InlineDataAttribute("9", "404", new string[0])]
        public void GetByIdOfActor(string id, string statusCode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GetByActorId"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Id", id);
            argumentsOfScenario.Add("status code", statusCode);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get By Id of Actor", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 11
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 12
 testRunner.Given("I am a client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
 testRunner.When(string.Format("I make Get Request with \'{0}\' and \'api/Actors/\'", id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
 testRunner.Then(string.Format("response code must be \'{0}\'", statusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Add an Actor")]
        [Xunit.TraitAttribute("FeatureTitle", "Actor Resource")]
        [Xunit.TraitAttribute("Description", "Add an Actor")]
        [Xunit.TraitAttribute("Category", "PostActor")]
        [Xunit.InlineDataAttribute("{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is renowned American act" +
            "or known for his iconic portrayal of Tony Stark, also known as Iron Man, in the " +
            "Marvel Cinematic Universe.\",\"dateOfBirth\":\"1965-04-04\",\"gender\":\"Male\"}", "201", new string[0])]
        [Xunit.InlineDataAttribute("{\"name\":,\"bio\":\"Robert Brown Junior is a renowned American actor known for his ic" +
            "onic portrayal of Tony Stark, also known as Iron Man, in the Marvel Cinematic Un" +
            "iverse.\",\"dateOfBirth\":\"1965-04-04\",\"gender\":\"Male\"}", "400", new string[0])]
        [Xunit.InlineDataAttribute("{\"name\":\"Robert Brown Junior\",\"bio\":,\"dateOfBirth\":\"1965-04-04T00:00:00\",\"gender\"" +
            ":\"Male\"}", "400", new string[0])]
        [Xunit.InlineDataAttribute("{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is a renowned American a" +
            "ctor known for his iconic portrayal of Tony Stark, also known as Iron Man, in th" +
            "e Marvel Cinematic Universe.\",\"dateOfBirth\":,\"gender\":\"Male\"}", "400", new string[0])]
        [Xunit.InlineDataAttribute("{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is a renowned American a" +
            "ctor known for his iconic portrayal of Tony Stark, also known as Iron Man, in th" +
            "e Marvel Cinematic Universe.\",\"dateOfBirth\":\"1965-04-04\",\"gender\":}", "400", new string[0])]
        public void AddAnActor(string actor, string statusCode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "PostActor"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Actor", actor);
            argumentsOfScenario.Add("status code", statusCode);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add an Actor", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 21
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 22
 testRunner.Given("I am a client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 23
 testRunner.When(string.Format("I make Post Request with \'{0}\' and \'api/Actors/\'", actor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
 testRunner.Then(string.Format("response code must be \'{0}\'", statusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Update an Actor")]
        [Xunit.TraitAttribute("FeatureTitle", "Actor Resource")]
        [Xunit.TraitAttribute("Description", "Update an Actor")]
        [Xunit.TraitAttribute("Category", "UpdateActor")]
        [Xunit.InlineDataAttribute("1", "{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is a renowned American a" +
            "ctor known for his iconic portrayal of Tony Stark, also known as Iron Man, in th" +
            "e Marvel Cinematic Universe.\",\"dateOfBirth\":\"1985-04-04T00:00:00\",\"gender\":\"Male" +
            "\"}", "200", new string[0])]
        [Xunit.InlineDataAttribute("1", "{\"name\":\"\",\"bio\":\"Robert Brown Junior is a renowned American actor known for his " +
            "iconic portrayal of Tony Stark, also known as Iron Man, in the Marvel Cinematic " +
            "Universe.\",\"dateOfBirth\":\"1965-04-04T00:00:00\",\"gender\":\"Male\"}", "400", new string[0])]
        [Xunit.InlineDataAttribute("1", "{\"name\":\"Robert Brown Junior\",\"bio\":,\"dateOfBirth\":\"1965-04-04T00:00:00\",\"gender\"" +
            ":\"Male\"}", "400", new string[0])]
        [Xunit.InlineDataAttribute("1", "{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is a renowned American a" +
            "ctor known for his iconic portrayal of Tony Stark, also known as Iron Man, in th" +
            "e Marvel Cinematic Universe.\",\"dateOfBirth\":\"\",\"gender\":\"Male\"}", "400", new string[0])]
        [Xunit.InlineDataAttribute("1", "{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is a renowned American a" +
            "ctor known for his iconic portrayal of Tony Stark, also known as Iron Man, in th" +
            "e Marvel Cinematic Universe.\",\"dateOfBirth\":\"1965-04-04T00:00:00\",\"gender\":}", "400", new string[0])]
        [Xunit.InlineDataAttribute("9", "{\"name\":\"Robert Brown Junior\",\"bio\":\"Robert Brown Junior is a renowned American a" +
            "ctor known for his iconic portrayal of Tony Stark, also known as Iron Man, in th" +
            "e Marvel Cinematic Universe.\",\"dateOfBirth\":\"1985-04-04T00:00:00\",\"gender\":\"Male" +
            "\"}", "404", new string[0])]
        public void UpdateAnActor(string id, string actor, string statusCode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UpdateActor"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Id", id);
            argumentsOfScenario.Add("Actor", actor);
            argumentsOfScenario.Add("status code", statusCode);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update an Actor", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 34
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 35
 testRunner.Given("I am a client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 36
 testRunner.When(string.Format("I make Update Request with \'{0}\' , \'{1}\' and \'api/Actors/\'", actor, id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
 testRunner.Then(string.Format("response code must be \'{0}\'", statusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Delete an Actor")]
        [Xunit.TraitAttribute("FeatureTitle", "Actor Resource")]
        [Xunit.TraitAttribute("Description", "Delete an Actor")]
        [Xunit.TraitAttribute("Category", "DeleteActor")]
        [Xunit.InlineDataAttribute("1", "200", new string[0])]
        [Xunit.InlineDataAttribute("9", "404", new string[0])]
        public void DeleteAnActor(string id, string statusCode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DeleteActor"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Id", id);
            argumentsOfScenario.Add("status code", statusCode);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete an Actor", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 49
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 50
 testRunner.Given("I am a client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 51
 testRunner.When(string.Format("I make Delete Request with \'{0}\' and \'api/Actors/\'", id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.Then(string.Format("response code must be \'{0}\'", statusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ActorResourceFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ActorResourceFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
